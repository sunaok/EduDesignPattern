package jp.goldhonest.BuilderPattern;

/**
 * Created by sunao on 2015/06/15.
 * トップページ →　技術解説 →　デザインパターン →　7. Builder パターン
 Clip to Evernote
 7. Builder パターン

 2012/04/26 一部修正しました
 デザインパターン 7章　Builder パターン
 7.1　Builder パターンとは
 7.2　サンプルケース
 7.3　Builder パターンのまとめ
 7.1 Builder パターンとは

 第７章では、Builder パターンを学びます。builder とは、建築者や建築業者などを意味する単語です。Builder パターンとは、同じ作成過程で異なる表現形式の結果を得るためのパターンです。

 例えば、家を建てることを考えてみます。完成する家がどのような家になるかというのは「家の構築過程」と「素材」大きく２つの要素で決定されると考えてみてください。「作成過程」とは、「どのような順番で、どこに何を配置していくか」というようなことであり、「素材」とは、「柱には何を使って、壁には何を使って・・・」ということであると考えてください。

 このとき、「作成過程」には、"平屋を建てるための作成過程" や "２階建ての家を建てるための作成過程"、または "少し変わった平屋を建てるための作成過程" など様々なものが考えられます。同様に、「素材」にも、"柱は木で、壁は土壁、屋根は瓦" などのような和風の家を建てるための素材を用いることもあれば、"柱は鉄で壁と屋根はコンクリート" といった場合も考えられます。

 これらをそれぞれ用意しておくことで、『 "ちょっと変わった平屋を建てる作成過程" で "柱は鉄で壁と屋根はコンクリート" の家を建ててください』という要望に柔軟に応えることができるようになります。

 Builder パターンとは、このような、「作成過程」を決定する Director と呼ばれるものと「表現形式」を決定する Builder と呼ばれるものを組み合わせることで、オブジェクトの生成をより柔軟にし、そのオブジェクトの「作成過程」をもコントロールすることができるようにするためのパターンです。
 http://www.techscore.com/tech/DesignPattern/Builder.html/
 */

/*
* サンプルケース
* サンプルケースでは、理科の実験で、食塩水と砂糖水を作ることを考えましょう。 食塩水 をあらわすクラスは以下のソースコードで与えられているものとします。(砂糖水をあらわすクラスも同様とする)
* */
public class SaltWater {
    public double salt;
    public double water;

    public SaltWater(double water, double salt) {
        this.salt = salt;
        this.water = water;
    }

}
